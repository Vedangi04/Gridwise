{"ast":null,"code":"var _jsxFileName = \"C:\\\\FinalProject\\\\my-dashboard-app\\\\src\\\\components\\\\CSVDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Papa from 'papaparse'; // For parsing CSV files\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CSVDisplay = ({\n  filePath\n}) => {\n  _s();\n  const [csvData, setCSVData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(filePath);\n        const csvText = await response.text();\n        const parsedData = Papa.parse(csvText, {\n          header: true\n        }).data;\n        setCSVData(parsedData);\n      } catch (error) {\n        console.error('Error fetching or parsing CSV data:', error);\n      }\n    };\n    fetchData();\n  }, [filePath]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"CSV File Data:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: csvData.length > 0 && Object.keys(csvData[0]).map((header, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: header\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: csvData.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: Object.values(row).map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: cell\n          }, cellIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this))\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(CSVDisplay, \"Hs5+Ihf2D3ca8p3QNpLswAkEpDs=\");\n_c = CSVDisplay;\nexport default CSVDisplay;\nvar _c;\n$RefreshReg$(_c, \"CSVDisplay\");","map":{"version":3,"names":["React","useState","useEffect","Papa","jsxDEV","_jsxDEV","CSVDisplay","filePath","_s","csvData","setCSVData","fetchData","response","fetch","csvText","text","parsedData","parse","header","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","Object","keys","map","index","row","rowIndex","values","cell","cellIndex","_c","$RefreshReg$"],"sources":["C:/FinalProject/my-dashboard-app/src/components/CSVDisplay.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Papa from 'papaparse'; // For parsing CSV files\r\n\r\nconst CSVDisplay = ({ filePath }) => {\r\n  const [csvData, setCSVData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(filePath);\r\n        const csvText = await response.text();\r\n        const parsedData = Papa.parse(csvText, { header: true }).data;\r\n        setCSVData(parsedData);\r\n      } catch (error) {\r\n        console.error('Error fetching or parsing CSV data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [filePath]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>CSV File Data:</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            {/* Assuming the CSV file has headers, use them as table headers */}\r\n            {csvData.length > 0 && Object.keys(csvData[0]).map((header, index) => (\r\n              <th key={index}>{header}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {/* Render each row of data */}\r\n          {csvData.map((row, rowIndex) => (\r\n            <tr key={rowIndex}>\r\n              {/* Render each cell in the row */}\r\n              {Object.values(row).map((cell, cellIndex) => (\r\n                <td key={cellIndex}>{cell}</td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CSVDisplay;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACN,QAAQ,CAAC;QACtC,MAAMO,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QACrC,MAAMC,UAAU,GAAGb,IAAI,CAACc,KAAK,CAACH,OAAO,EAAE;UAAEI,MAAM,EAAE;QAAK,CAAC,CAAC,CAACC,IAAI;QAC7DT,UAAU,CAACM,UAAU,CAAC;MACxB,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC7D;IACF,CAAC;IAEDT,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAEd,oBACEF,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBrB,OAAA;MAAAiB,QAAA,gBACEjB,OAAA;QAAAiB,QAAA,eACEjB,OAAA;UAAAiB,QAAA,EAEGb,OAAO,CAACkB,MAAM,GAAG,CAAC,IAAIC,MAAM,CAACC,IAAI,CAACpB,OAAO,CAAC,CAAC,CAAC,CAAC,CAACqB,GAAG,CAAC,CAACZ,MAAM,EAAEa,KAAK,kBAC/D1B,OAAA;YAAAiB,QAAA,EAAiBJ;UAAM,GAAda,KAAK;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAc,CAC7B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRrB,OAAA;QAAAiB,QAAA,EAEGb,OAAO,CAACqB,GAAG,CAAC,CAACE,GAAG,EAAEC,QAAQ,kBACzB5B,OAAA;UAAAiB,QAAA,EAEGM,MAAM,CAACM,MAAM,CAACF,GAAG,CAAC,CAACF,GAAG,CAAC,CAACK,IAAI,EAAEC,SAAS,kBACtC/B,OAAA;YAAAiB,QAAA,EAAqBa;UAAI,GAAhBC,SAAS;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAC/B;QAAC,GAJKO,QAAQ;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKb,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAClB,EAAA,CA5CIF,UAAU;AAAA+B,EAAA,GAAV/B,UAAU;AA8ChB,eAAeA,UAAU;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}