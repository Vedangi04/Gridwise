{"ast":null,"code":"var _jsxFileName = \"C:\\\\FinalProject\\\\my-dashboard-app\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport LineGraph from './LineGraph';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:3001';\nconst Dashboard = () => {\n  _s();\n  const [showSolarTable, setShowSolarTable] = useState(false);\n  const [showWindTable, setShowWindTable] = useState(false);\n  const [windData, setWindData] = useState([]);\n  const handleSolarButtonClick = () => {\n    setShowSolarTable(true);\n    // setShowWindTable(false);\n  };\n  const handleWindButtonClick = async () => {\n    await getWindPrediction();\n  };\n  const getWindPrediction = async () => {\n    try {\n      console.log('Fetching wind prediction data...');\n      const category = 'windprediction';\n      const response = await axios.post(`${API_URL}/api/getprediction`, JSON.stringify({\n        category\n      }), {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        }\n      });\n      const responseData = response.data.apidata;\n      console.log('Fetched data:', responseData);\n      setWindData(responseData);\n      setShowWindTable(true);\n    } catch (error) {\n      console.error('Error fetching wind prediction data:', error);\n    }\n  };\n  useEffect(() => {\n    if (windData.length !== 0) setShowWindTable(true);\n    // setShowSolarTable(false);\n  }, [windData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"GridWise\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSolarButtonClick,\n        children: \"Solar Generation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleWindButtonClick,\n        children: \"Wind Generation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), showSolarTable && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Solar Power Generation Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), showWindTable && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Power Data Visualization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(LineGraph, {\n          data: windData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Wind Power Generation Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"vLxTeSOmwCFkttollI3DNiDfMf0=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","LineGraph","jsxDEV","_jsxDEV","API_URL","Dashboard","_s","showSolarTable","setShowSolarTable","showWindTable","setShowWindTable","windData","setWindData","handleSolarButtonClick","handleWindButtonClick","getWindPrediction","console","log","category","response","post","JSON","stringify","method","headers","responseData","data","apidata","error","length","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/FinalProject/my-dashboard-app/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport LineGraph from './LineGraph';\r\n\r\nconst API_URL = 'http://localhost:3001';\r\nconst Dashboard = () => {\r\n  const [showSolarTable, setShowSolarTable] = useState(false);\r\n  const [showWindTable, setShowWindTable] = useState(false);\r\n  const [windData, setWindData] = useState([]);\r\n\r\n  const handleSolarButtonClick = () => {\r\n    setShowSolarTable(true);\r\n    // setShowWindTable(false);\r\n  };\r\n\r\n  const handleWindButtonClick = async() => {\r\n    await getWindPrediction();\r\n  };\r\n\r\n  const getWindPrediction = async () => {\r\n    try {\r\n      console.log('Fetching wind prediction data...');\r\n      const category = 'windprediction';\r\n      const response = await axios.post(`${API_URL}/api/getprediction`, JSON.stringify({ category }), {\r\n        method: 'POST',\r\n        headers: {\r\n          'content-type': 'application/json',\r\n        },\r\n      });\r\n      const responseData = response.data.apidata;\r\n      console.log('Fetched data:', responseData);\r\n      setWindData(responseData);\r\n      setShowWindTable(true);\r\n    } catch (error) {\r\n      console.error('Error fetching wind prediction data:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(windData.length !== 0)\r\n      setShowWindTable(true);\r\n    // setShowSolarTable(false);\r\n  }, [windData]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>GridWise</h1>\r\n      <div>\r\n        <button onClick={handleSolarButtonClick}>Solar Generation</button>\r\n        <button onClick={handleWindButtonClick}>Wind Generation</button>\r\n      </div>\r\n      {showSolarTable && (\r\n        <div>\r\n          <h2>Solar Power Generation Data</h2>\r\n          {/* <CSVDisplay filePath=\"/solar_prediction_data.csv\" /> */}\r\n        </div>\r\n      )}\r\n      {showWindTable && (\r\n        <div>\r\n          <div>\r\n            <h2>Power Data Visualization</h2>\r\n            <LineGraph data={windData} />\r\n          </div>\r\n          <div>\r\n            <h2>Wind Power Generation Data</h2>\r\n            {/* <CSVDisplay filePath=\"/wind_prediction_data.csv\" /> */}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}